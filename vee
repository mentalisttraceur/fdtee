#!/bin/sh
# Copyright (C) Alexander Kozhevnikov <mentalisttraceur@gmail.com> 2015-05-08;
# vee 1.0.0
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public Licence as published by
# the Free Software Foundation, either version 3 of the licence or,
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for details.
# 
# You should've received a copy of the GNU General Public License
# with this program. If not, see <http://www.gnu.org/licences/>,
# or write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330 Boston MA 02111-1307 USA.

printUsage()
{
 printf '%s\n' \
  'Usage: vee [OPTIONS] [FD]...' \
  '' \
  'Copy stdin to each FD (file descriptor)*.' \
  '' \
  ' -h, --help              Print this help text and exit.' \
  ' -i, --ignore-interrupts Ignore interrupt signals (SIGINT)' \
  '' \
  '* File descriptors are typically positive integers, but your system/shell' \
  '  may allow for other arguments. Presently vee uses the "1>&FD" syntax of' \
  '  the system shell for each FD argument.'
}

parseOptions=:
i=0
while :
do
 case $# in 0) break; esac
 if $parseOptions
 then
  case $1 in
  --)
   parseOptions=false
   shift
   continue
  ;;
  -h | --help)
   printUsage
   exit 0
  ;;
  -i | --ignore-interrupts)
   trap '' INT
   continue
  esac
 fi
 if printf '' 1>&"$1"
 then
  eval arg$i=\$1
  i=$((i + 1))
 fi
 shift
done

arglen=$i
lf='
'
while IFS= read -r -n 1 char
do
 case $char in '') char=$lf; esac
 i=0
 while :
 do
  case $i in $arglen) break; esac
  eval fd=\$arg$i
  printf %c "$char" 1>&"$fd"
  i=$((i + 1))
 done
done
